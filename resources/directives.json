{
  ".data": "Subsequent items stored in Data segment at next available address",
  ".text": "Subsequent items (instructions) stored in Text segment at next available address",
  ".word": "Store the listed value(s) as 32 bit words on word boundary",
  ".ascii": "Store the string in the Data segment but do not add null terminator",
  ".asciiz": "Store the string in the Data segment and add null terminator",
  ".byte": "Store the listed value(s) as 8 bit bytes",
  ".align": "Align next data item on specified byte boundary.\n(0=byte, 1=half, 2=word: 3=double)",
  ".half": "Store the listed value(s) as 16 bit halfwords on halfword boundary",
  ".space": "Reserve the next specified number of bytes in Data segment",
  ".double": "Store the listed value(s) as double precision floating point",
  ".float": "Store the listed value(s) as single precision floating point",
  ".extern": "Declare the listed label and byte length to be a global data field",
  ".kdata": "Subsequent items stored in Kernel Data segment at next available address",
  ".ktext": "Subsequent items (instructions) stored in Kernel Text segment at next available address",
  ".globl": "Declare the listed label(s) as global to enable referencing from other files",
  ".set": "Set assembler variables",
  ".eqv": "Substitute second operand for first. First operand is symbol: Second operand is expression (like #define)",
  ".macro": "Begin macro definition. See .end_macro",
  ".end_macro": "End macro definition. See .macro",
  ".include": "Insert the contents of the specified file"
}
